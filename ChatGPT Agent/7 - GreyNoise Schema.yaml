openapi: 3.1.0
info:
  title: GreyNoise Community API
  description: Look up noise classification and metadata for an IP using the GreyNoise Community API.
  version: 1.0.3

servers:
  - url: https://api.greynoise.io

paths:
  /v3/community/{ip}:
    get:
      operationId: getCommunityIpInfo
      summary: Get noise classification for a specific IP address.
      parameters:
        - name: ip
          in: path
          required: true
          description: IP address to query (e.g. 8.8.8.8).
          schema:
            type: string
            format: ipv4
      responses:
        '200':
          description: Successful response with IP data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommunityIpResponse'
        '404':
          description: IP not found or not in dataset.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
        '403':
          description: Invalid API key.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResponse'
        '429':
          description: Rate limit exceeded.
        '500':
          description: Internal server error.
      security:
        - apiKeyAuth: []

components:
  securitySchemes:
    apiKeyAuth:
      type: apiKey
      in: header
      name: key

  schemas:
    CommunityIpResponse:
      type: object
      required: [ip, noise, riot, classification, message]
      properties:
        ip:
          type: string
          format: ipv4
        noise:
          type: boolean
        riot:
          type: boolean
        classification:
          type: string
          description: Classification of the IP (e.g., benign, malicious, unknown)
        name:
          type: string
          nullable: true
        link:
          type: string
          format: uri
        last_seen:
          type: string
          format: date
        message:
          type: string

    NotFoundResponse:
      type: object
      required: [message, ip, noise, riot]
      properties:
        message:
          type: string
        ip:
          type: string
        noise:
          type: boolean
        riot:
          type: boolean

    UnauthorizedResponse:
      type: object
      required: [message]
      properties:
        message:
          type: string
